openapi: 3.0.3
info:
  title: YaHack Kilogram API
  description: Набор методов для обращения к серверу мессенджера Kilogram. <br> 
    ВАЖНО!! Обратите внимание, что ко всем методам сначала нужен префикс /api/{version}
  version: 1.0.0
  contact:
    name: Поддержка API
    url: https://t.me/gavrilovdash

servers:
  - url: http://127.0.0.1:3000/api/v1
    description: Dev по умолчанию
  - url: http://team5.ya-itmo.ru/api/v1
    description: Production

tags:
  - name: user
    description: Операции, связанные с пользователем
  - name: chat
    description: Операции, связанные с чатами
  - name: message
    description: Операции, связанные с сообщениями
  - name: reaction
    description: Операции, связанные с реакциями

paths:
  /user:
    get:
      tags:
        - user
      summary: Получить информацию о каком-либо пользователе
      description: Если указан id, возвращает пользователя по id. <br> 
        Если указан login, возвращает пользователя по логину. <br> 
        Если ничего не указано, возвращает информацию об авторизованном пользователе.
      operationId: getUser
      parameters: 
        - name: id
          description: Айди пользователя
          in: query
          schema: 
            type: integer
        - name: login
          description: Логин пользователя 
          in: query
          schema: 
            type: string
      responses:
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '404':
          description: Пользователя с переданными параметрами не существует
        '500':
          description: Ошибка на сервере

  /user/avatar:
    get:
      tags:
        - user
      summary: Получить аватар какого-либо пользователя
      description: Возвращает аватар какого-либо пользователя по пути к файлу
      operationId: getUserAvatar
      parameters:
        - name: path
          description: Путь к файлу
          in: query
          schema: 
            type: string
      responses: 
        '200':
          description: Успешно
          content:
            image/png:
              schema:
                type: string
                description: Изображение
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '404':
          description: Пользователя не существует
        '500':
          description: Ошибка на сервере
    post:
      tags:
        - user
      summary: Обновить аватар авторизованного пользователя
      operationId: updateUserAvatar
      requestBody:
        description: Новый аватар
        required: true
        content: 
          image/png:
            schema:
              type: string
      responses: 
        '200':
          description: Успешно
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '500':
          description: Ошибка на сервере

  /chats:
    get:
      tags:
        - chat
      summary: Получить чаты, в которых состоит авторизованный пользоватеть
      operationId: getChats
      responses: 
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
        '401':
          description: Клиент не авторизован
        '500':
          description: Ошибка на сервере

  /chat:
    get:
      tags:
        - chat
      summary: Получить информацию о чате по id
      operationId: getChatById
      parameters: 
        - name: id
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Пользователь не имеет доступа к чату
        '404':
          description: Чат с таким id не существует
        '500':
          description: Ошибка на сервере
    post:
      tags:
        - chat
      summary: Создать новый чат
      operationId: createChat
      requestBody: 
        description: Новый чат.
        required: true
        content: 
          application/json: 
            schema:
                $ref: '#/components/schemas/ChatRequest'
      responses: 
        '200':
          description: Успех, возвращает созданный чат
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '500':
          description: Ошибка на сервере
    delete:
      tags:
        - chat
      summary: Удалить чат по id
      operationId: deleteChatById
      parameters: 
        - name: id
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Пользователь не имеет прав удалять чат
        '404':
          description: Чат с таким id не существует
        '500':
          description: Ошибка на сервере

  /chat/{chatId}/user:
    post:
      tags:
        - chat
      summary: Добавить нового пользователя в чат
      operationId: addUserInChat
      parameters: 
        - name: chatId
          in: path
          required: true
          schema: 
            type: integer
        - name: userId
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успех
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Пользователь не имеет доступа к чату
        '404':
          description: Чат или добавляемый пользователь не существуют
        '500':
          description: Ошибка на сервере

    delete:
      tags:
        - chat
      summary: Удалить пользователя из чата
      operationId: deleteUserFromChat
      parameters: 
        - name: chatId
          in: path
          required: true
          schema: 
            type: integer
        - name: userId
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успех
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Пользователь не имеет доступа к чату
        '404':
          description: Чат или удаляемый пользователь не существуют
        '500':
          description: Ошибка на сервере

  /chat/avatar:
    get:
      tags:
        - chat
      summary: Получить аватар чата
      operationId: getChatAvatar
      parameters:
        - name: path
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
          content:
            image/png:
              schema:
                type: string
                description: Изображение
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Нет доступа к чату
        '404':
          description: Чат не существует
        '500':
          description: Ошибка на сервере

    post:
      tags:
        - chat
      summary: Обновить аватар чата
      operationId: updateChatAvatar
      requestBody:
        description: Новый аватар чата
        required: true
        content:
          image/png:
            schema:
              type: string
      responses: 
        '200':
          description: Успешно
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Нет доступа к чату
        '404':
          description: Чат не существует
        '500':
          description: Ошибка на сервере

  /chat/invite-link:
    get:
      tags:
        - chat
      summary: Создать пригласительную ссылку для чата
      operationId: createInviteLink
      parameters: 
        - name: id
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Нет доступа к чату
        '404':
          description: Чат не существует
        '500':
          description: Ошибка на сервере

  /chat/invite-link/{link}:
    get:
      tags:
        - chat
      summary: Пригласительная ссылка
      operationId: inviteLink
      parameters:
        - name: link
          in: path
          required: true
          schema: 
            type: string
      responses: 
        '200':
          description: Успешно, пользователь добавлен в чат
        '401':
          description: Клиент не авторизован
        '404':
          description: Чат не существует или пригласительная ссылка больше не работает
        '500':
          description: Ошибка на сервере

    delete:
      tags:
        - chat
      summary: Удалить пригласительную ссылку
      operationId: deleteInviteLink
      parameters:
        - name: link
          in: path
          required: true
          schema: 
            type: string
      responses: 
        '200':
          description: Успех
        '401':
          description: Клиент не авторизован
        '404':
          description: Пригласительная ссылка не существует
        '500':
          description: Ошибка на сервере

  /message:
    get:
      tags:
        - message
      summary: Получить сообщение
      description: Возвращает сообщение по его id
      operationId: getMessage
      parameters: 
        - name: id
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Клиент не имеет доступа к сообщению
        '404':
          description: Сообщение не существует
        '500':
          description: Ошибка на сервере
    post:
      tags:
        - message
      summary: Отправить сообщение
      operationId: createMessage
      requestBody: 
        description: Новое сообщение
        required: true
        content: 
          application/json: 
            schema:
                $ref: '#/components/schemas/MessageRequest'
      responses:
        '200':
          description: Успешно, возвращает новое сообщение
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: У клиента нет доступа к чату
        '404':
          description: Чат не существует
        '500':
          description: Ошибка на сервере
    delete:
      tags:
        - message
      summary: Удалить сообщение
      description: Удаляет сообщение по его id
      operationId: deleteMessage
      parameters: 
        - name: id
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Клиент не имеет доступа к сообщению
        '404':
          description: Сообщения не существует
        '500':
          description: Ошибка на сервере

  /message/last:
    get:
      tags:
        - message
      summary: Получить последнее сообщение в чате
      operationId: getLastMessage
      parameters: 
        - name: chatId
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Клиент не имеет доступа к чату
        '404':
          description: Чат или сообщение не существуют
        '500':
          description: Ошибка на сервере
  
  /message/image:
    get:
      tags:
        - message
      summary: Получить изображение из сообщения по пути
      operationId: getImage
      parameters: 
        - name: path
          in: query
          required: true
          schema: 
            type: string
      responses: 
        '200':
          description: Успешно
          content:
            image/png:
              schema:
                type: string
                description: Изображение, преобразованное в текстовый формат
            image/jpeg:
              schema:
                type: string
                description: Изображение, преобразованное в текстовый формат
        '400':
          description: Неверный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Нет доступа к картинке
        '404':
          description: Картинки не существует
        '500':
          description: Ошибка на сервере

  /messages:
    get:
      tags:
        - message
      summary: Получить сообщения, находящиеся в чате
      description: Если указать lastMessageId, то вернутся все сообщения с большим id
      operationId: getMessages
      parameters: 
        - name: chatId
          in: query
          required: true
          schema: 
            type: integer
        - name: lastMessageId
          in: query
          required: false
          schema:
            type: integer
      responses: 
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Клиент не имеет прав доступа к чату
        '404':
          description: Чат не существует
        '500':
          description: Ошибка на сервере

  /reaction:
    get:
      tags:
        - reaction
      summary: Получить реакцию
      description: Возвращает реакцию по ее id
      operationId: getReaction
      parameters: 
        - name: id
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Клиент не имеет доступа к сообщению
        '404':
          description: Сообщения не существует
        '500':
          description: Ошибка на сервере
    post:
      tags:
        - reaction
      summary: Отправить реакцию
      operationId: createReaction
      requestBody: 
        description: Новая реакция
        required: true
        content: 
          application/json: 
            schema:
                $ref: '#/components/schemas/ReactionRequest'
      responses:
        '200':
          description: Успешно, возвращает новую реакцию
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: У клиента нет доступа к сообщению
        '404':
          description: Сообщения не существует
        '500':
          description: Ошибка на сервере

    delete:
      tags:
        - reaction
      summary: Удалить реакцию
      description: Удаляет реакцию по ее id
      operationId: deleteReaction
      parameters: 
        - name: id
          in: query
          required: true
          schema: 
            type: integer
      responses: 
        '200':
          description: Успешно
        '400':
          description: Некорректный запрос
        '401':
          description: Клиент не авторизован
        '403':
          description: Клиент не имеет доступа к реакции
        '404':
          description: Реакции не существует
        '500':
          description: Ошибка на сервере

  /reactions:
      get:
        tags:
          - reaction
        summary: Получить все реакции с сообщения
        operationId: getReactions
        parameters: 
          - name: messageId
            in: query
            required: true
            schema: 
              type: integer
        responses: 
          '200':
            description: Успешно
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Reaction'
          '400':
            description: Некорректный запрос
          '401':
            description: Клиент не авторизован
          '403':
            description: Клиент не имеет доступа к сообщению
          '404':
            description: Сообщения не существует
          '500':
            description: Ошибка на сервере
  
  

components:
  schemas:
    User:
      type: object
      description: Пользователь
      properties: 
        id:
          description: Идентификатор пользователя
          type: integer
          example: 10
        name:
          description: Отображаемое имя пользователя
          type: string
          example: Данил Гаврилов
        login:
          description: Строковый идентификатор пользователя
          type: string
          example: gr33n-m1ner
        avatarPath:
          description: Путь к аватару пользователя
          type: string
          example: 123.jpeg

    Chat:
      type: object
      description: Чат <br> Если тип чата - direct, то поле name пусто, аватара чата не существует и в users ровно 2 пользователя
      properties:
        id:
          description: Идентификатор чата
          type: integer
          example: 10
        name:
          description: Название чата
          type: string
          nullable: true
        chatType:
          description: Тип чата
          type: string
          example: direct
          enum:
            - direct
            - group
        users:
          description: Пользователи-участники чата
          type: array
          items: 
            $ref: '#/components/schemas/User'
        avatarPath:
          description: Путь к аватару чата
          type: string
          example: 123chat.jpeg
        lastMessage:
          description: Последнее сообщение в чате
          type: object
          allOf:
            - $ref: '#/components/schemas/Message'

    Message:
      description: Сообщение
      type: object
      properties:
        id:
          description: Идентификатор сообщения
          type: integer
          example: 10
        userId:
          description: Идентификатор пользователя, который отправил сообщение
          type: integer
          example: 10
        chatId:
          description: Идентификатор чата, в котором находится сообщение
          type: integer
          example: 10
        content:
          description: Строковое содержимое сообщения
          type: string
          example: What a wonderful world
        imageContent:
          description: Путь к картинке из сообщения, если она есть
          type: string
          nullable: true
        sendingTime:
          description: Время отправки сообщения
          type: string
          format: date-time
        reactions:
          description: Реакции на сообщение
          type: array
          items: 
            $ref: '#/components/schemas/Reaction'
    
    Reaction:
      description: Реакция на сообщение
      type: object
      properties:
        id:
          description: Идентификатор реакции
          type: integer
          example: 15
        messageId:
          description: Идентификатор сообщения, на котором стоит реакция
          type: integer
          example: 9
        userId:
          description: Идентификатор пользователя, который поставил реакцию
          type: integer
          example: 1
        reaction:
          description: Реакция
          type: string
          example: 😇

    ChatRequest:
      description: Запрос на создание чата
      type: object
      properties:
        name:
          description: Название нового чата
          type: string
          nullable: true
        chatType:
          description: Тип нового чата
          type: string
          example: direct
          enum:
            - direct
            - group
        users:
          description: Пользователи, которые будут участниками чата
          type: array
          items: 
            type: integer
    
    MessageRequest:
      description: Запрос на создание сообщения
      type: object
      properties:
        chatId:
          description: Идентификатор чата, в котором будет находиться сообщение
          type: integer
          example: 10
        content:
          description: Строковое содержимое сообщения
          type: string
          example: What a wonderful world
        imageContent:
          description: Путь к картинке из сообщения, если она есть
          type: string
          nullable: true
        sendingTime:
          description: Время отправки сообщения
          type: string
          format: date-time
    
    ReactionRequest:
      description: Запрос на создание реакции
      type: object
      properties:
        messageId:
          description: Идентификатор сообщения, на котором стоит реакция
          type: integer
          example: 9
        reaction:
          description: Реакция
          type: string
          example: 😇